/**
 * @fileoverview gRPC-Web generated client stub for user
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.24.3
// source: proto/user.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as google_protobuf_wrappers_pb from 'google-protobuf/google/protobuf/wrappers_pb';
import * as proto_user_pb from '../proto/user_pb';


export class UserServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateUser = new grpcWeb.MethodDescriptor(
    '/user.UserService/CreateUser',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.User,
    proto_user_pb.User,
    (request: proto_user_pb.User) => {
      return request.serializeBinary();
    },
    proto_user_pb.User.deserializeBinary
  );

  createUser(
    request: proto_user_pb.User,
    metadata: grpcWeb.Metadata | null): Promise<proto_user_pb.User>;

  createUser(
    request: proto_user_pb.User,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void): grpcWeb.ClientReadableStream<proto_user_pb.User>;

  createUser(
    request: proto_user_pb.User,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/user.UserService/CreateUser',
        request,
        metadata || {},
        this.methodDescriptorCreateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/user.UserService/CreateUser',
    request,
    metadata || {},
    this.methodDescriptorCreateUser);
  }

  methodDescriptorReadUser = new grpcWeb.MethodDescriptor(
    '/user.UserService/ReadUser',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.Int64Value,
    proto_user_pb.User,
    (request: google_protobuf_wrappers_pb.Int64Value) => {
      return request.serializeBinary();
    },
    proto_user_pb.User.deserializeBinary
  );

  readUser(
    request: google_protobuf_wrappers_pb.Int64Value,
    metadata: grpcWeb.Metadata | null): Promise<proto_user_pb.User>;

  readUser(
    request: google_protobuf_wrappers_pb.Int64Value,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void): grpcWeb.ClientReadableStream<proto_user_pb.User>;

  readUser(
    request: google_protobuf_wrappers_pb.Int64Value,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/user.UserService/ReadUser',
        request,
        metadata || {},
        this.methodDescriptorReadUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/user.UserService/ReadUser',
    request,
    metadata || {},
    this.methodDescriptorReadUser);
  }

  methodDescriptorUpdateUser = new grpcWeb.MethodDescriptor(
    '/user.UserService/UpdateUser',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.User,
    proto_user_pb.User,
    (request: proto_user_pb.User) => {
      return request.serializeBinary();
    },
    proto_user_pb.User.deserializeBinary
  );

  updateUser(
    request: proto_user_pb.User,
    metadata: grpcWeb.Metadata | null): Promise<proto_user_pb.User>;

  updateUser(
    request: proto_user_pb.User,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void): grpcWeb.ClientReadableStream<proto_user_pb.User>;

  updateUser(
    request: proto_user_pb.User,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/user.UserService/UpdateUser',
        request,
        metadata || {},
        this.methodDescriptorUpdateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/user.UserService/UpdateUser',
    request,
    metadata || {},
    this.methodDescriptorUpdateUser);
  }

  methodDescriptorDeleteUser = new grpcWeb.MethodDescriptor(
    '/user.UserService/DeleteUser',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.Int64Value,
    proto_user_pb.User,
    (request: google_protobuf_wrappers_pb.Int64Value) => {
      return request.serializeBinary();
    },
    proto_user_pb.User.deserializeBinary
  );

  deleteUser(
    request: google_protobuf_wrappers_pb.Int64Value,
    metadata: grpcWeb.Metadata | null): Promise<proto_user_pb.User>;

  deleteUser(
    request: google_protobuf_wrappers_pb.Int64Value,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void): grpcWeb.ClientReadableStream<proto_user_pb.User>;

  deleteUser(
    request: google_protobuf_wrappers_pb.Int64Value,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_user_pb.User) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/user.UserService/DeleteUser',
        request,
        metadata || {},
        this.methodDescriptorDeleteUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/user.UserService/DeleteUser',
    request,
    metadata || {},
    this.methodDescriptorDeleteUser);
  }

  methodDescriptorListUsers = new grpcWeb.MethodDescriptor(
    '/user.UserService/ListUsers',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    proto_user_pb.User,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    proto_user_pb.User.deserializeBinary
  );

  listUsers(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<proto_user_pb.User> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/user.UserService/ListUsers',
      request,
      metadata || {},
      this.methodDescriptorListUsers);
  }

}

